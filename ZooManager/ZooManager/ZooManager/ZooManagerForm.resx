<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wHX2KIyfDr+NgAAAABJRU5ErkJggg==
</value>
  </data>
</root>